{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to Interesting facts about python","text":"<p>golang \u548c python \u6709\u8bb8\u591a\u7c7b\u4f3c\u7684\u5730\u65b9\uff0c\u4f46\u4e5f\u6709\u4e0d\u4e00\u6837\u7684\u8bbe\u8ba1\u3002</p> <p>\u4ece\u4e00\u4e9b\u5c0f\u6848\u4f8b\u51fa\u53d1\uff0c\u7b80\u5355\u660e\u4e86\u5730\u5c55\u793a\u8fd9\u4e9b\u6709\u8da3\u7684\u4e8b\u5b9e\u3002</p>"},{"location":"golang/golang/","title":"golang \u8bed\u8a00\u7684\u7279\u6027\u5728\u8fd9\u4e00\u4e2anav\u5c55\u793a","text":""},{"location":"golang/innerfunc/","title":"\u5728\u51fd\u6570\u5185\u5b9a\u4e49\u51fd\u6570","text":"<p>\u5728golang\u51fd\u6570\u7684\u5185\u90e8\uff0c\u53ef\u4ee5\u5b9a\u4e49\u53e6\u5916\u7684\u51fd\u6570</p> Go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Outer function\")\n    var innerFunction = func() {\n        fmt.Println(\"Inner function\")\n    }\n    innerFunction() // \u6ca1\u6709\u8fd9\u4e00\u53e5\u4f1a\u51fa\u9519\uff0c\u56e0\u4e3ainnerFunction\u5b9a\u4e49\u800c\u4e0d\u4f7f\u7528\n}\n</code></pre> Go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    fmt.Println(\"Outer function\")\n    innerFunction := func() { // \u4f7f\u7528 := \u4e5f\u53ef\u4ee5\n        fmt.Println(\"Inner function\")\n    }\n    innerFunction()\n}\n</code></pre>"},{"location":"golang/innerfunc2/","title":"\u95ed\u5305\u51fd\u6570","text":"<p>golang\u7684\u95ed\u5305\u51fd\u6570\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230\u76f8\u540c\u5730\u4f4d\u7684\u5144\u5f1f\u53d8\u91cf\uff0c\u540c\u4e00\u4f5c\u7528\u57df\u7684\u5176\u4ed6\u53d8\u91cf</p> Go<pre><code>func innerfunc2() {\n    x := 20\n    this_func_can_visit_x := func() {\n        fmt.Println(\"this_func_can_visit_x\", x)\n    }\n    this_func_can_visit_x() // this_func_can_visit_x 20\n}\n</code></pre>"},{"location":"golang/innernested/","title":"\u95ed\u5305\u9012\u5f52\u51fd\u6570","text":"<p>\u8981\u5728\u4e00\u4e2aA\u51fd\u6570\u5185\u90e8\uff0c\u5b9a\u4e49\u53e6\u4e00\u4e2aB\u51fd\u6570\uff0c\u4e14\u8981\u6c42B\u662f\u9012\u5f52\u51fd\u6570\uff0c\u89c2\u5bdf\u4e0b\u9762\u51e0\u79cd\u5199\u6cd5\u3002 Go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    // \u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u9012\u5f52\u51fd\u6570\n    // f1 := func(n int) int {\n    //  if n &lt; 0 {\n    //      return 1\n    //  }\n    //  return n + f1(n-1) // \u9519\u8bef\u7684\u65b9\u5f0f1\n    // }\n    // var f2 = func(n int) int {\n    //  if n &lt; 0 {\n    //      return 1\n    //  }\n    //  return n + f(n-1) // \u9519\u8bef\u7684\u65b9\u5f0f2\n    // }\n    var f3 func(int) int\n    f3 = func(n int) int {\n        if n &lt; 0 {\n            return 1\n        }\n        return n + f3(n-1) // \u9519\u8bef\u7684\u65b9\u5f0f\n    }\n    fmt.Printf(\"f3(): %v\\n\", f3(4))\n}\n</code></pre> \u9519\u8bef\u5199\u6cd51\u548c2\uff0c\u90fd\u662f\u7531\u4e8e\u5728\u51fd\u6570B\u5185\u90e8\u4f5c\u7528\u57df\u5185\uff0c\u627e\u4e0d\u5230\u540d\u79f0f1\u548cf2\u5bfc\u81f4\u7684\u3002</p>"},{"location":"monkey%E8%A7%A3%E9%87%8A%E5%99%A8/token/","title":"\u8bcd\u6cd5\u89e3\u6790","text":"<p>\u65e0\u8bba\u662f\u7f16\u8bd1\u578b\u8fd8\u662f\u89e3\u91ca\u578b\u8bed\u8a00\uff0c\u4e3a\u4e86\u80fd\u591f\u628a\u7f16\u7a0b\u8bed\u8a00\u8f6c\u5316\u4e3a\u8ba1\u7b97\u673a\u80fd\u7406\u89e3\u7684\u5185\u5bb9\uff0c\u9996\u5148\u5c31\u8981\u5bf9\u7528\u6237\u8f93\u5165\u7684\u5185\u5bb9\u8fdb\u884c\u62c6\u5206\uff0c\u62c6\u5206\u7684\u7ed3\u679c\u5c31\u662ftoken\u3002 \u5b8c\u6210\u8fd9\u4ef6 \u8bc6\u522b\u3001\u62c6\u5206 \u4efb\u52a1\u7684\u4ee3\u7801\u6a21\u5757\uff0c\u5c31\u662f\u8bcd\u6cd5\u89e3\u6790\u5668\uff0c\u662f\u4e00\u79cd\u5904\u7406\u6587\u672c\uff08\u7b26\u5408\u7279\u5b9a\u8bed\u6cd5\u89c4\u5b9a\u7684\uff09\u7684\u5de5\u5177\u3002</p>"},{"location":"monkey%E8%A7%A3%E9%87%8A%E5%99%A8/token/#_2","title":"\u8bcd\u6cd5\u89e3\u6790\u5668","text":"<p>\u8bcd\u6cd5\u5206\u6790\u5668\u5f80\u5f80\u662f\u7f16\u8bd1\u6216\u8005\u89e3\u91ca\u7684\u7b2c\u4e00\u6b65\uff0c\u4ed6\u5c06\u6e90\u4ee3\u7801\u62bd\u8c61\u6210\u4e3atoken\u5e8f\u5217\u3002 \u8bcd\u6cd5\u5206\u6790\u5668\uff08lexer\uff09\u4e5f\u53eb\u8bcd\u6cd5\u5355\u5143\u751f\u6210\u5668\uff08tokenizer\uff09\u6216\u8005\u626b\u63cf\u5668\uff08scanner\uff09\u3002</p>"},{"location":"monkey%E8%A7%A3%E9%87%8A%E5%99%A8/token/#_3","title":"\u8bcd\u6cd5\u5206\u6790\u5668\u7684\u529f\u80fd","text":"<p>\u8bcd\u6cd5\u5206\u6790\u5668\u662f\u4e00\u4e9b\u4ee3\u7801\uff0c\u5b83\u4eec\u80fd\u591f\u5b9e\u73b0\u8fd9\u6837\u7684\u529f\u80fd\uff1a\u628a\u7528\u6237\u5199\u7684\u6e90\u4ee3\u7801\uff0c\u8f6c\u6362\u6210\u4e00\u5806\u8bcd\u6cd5\u5355\u5143\uff08token\uff09\u3002\u5c31\u50cf\u662f\u4f60\u5728\u7ffb\u8bd1\u6587\u8a00\u6587\u7684\u65f6\u5019\uff0c\u9996\u5148\u9700\u8981\u628a\u4e00\u53e5\u8bdd\u62c6\u5206\u6210\u4e3a\u8bb8\u591a\u4e0d\u53ef\u518d\u5206\u7684\u5355\u5143\u3002</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u4f60\u8981\u7ffb\u8bd1\u201c\u5ead\u6709\u6787\u6777\u6811\u201d\uff0c\u9996\u5148\u5c31\u8981\u628a\u8fd9\u53e5\u8bdd\u62c6\u5206\u4e3a <code>[\"\u5ead\",\"\u6709\",\"\u6787\u6777\",\"\u6811\"]</code> \u6216\u8005 <code>[\"\u5ead\",\"\u6709\",\"\u6787\u6777\u6811\"]</code>\uff0c\u4f60\u8981\u505a\u7684\u4e8b\u60c5\u5c31\u662f\u62c6\u5206\uff0c\u5f97\u5230\u4e00\u4e2a\u5355\u8bcd\uff08\u6709\u7684\u5355\u8bcd\u5c31\u662f\u4e00\u4e2a\u5b57\uff09\u5e8f\u5217\uff0c\u800c\u4e0d\u5fc5\u5173\u5fc3\u8fd9\u53e5\u8bdd\u8868\u8fbe\u4ec0\u4e48\u610f\u601d\uff0c\u662f\u4e0d\u662f\u7b26\u5408\u53e4\u6c49\u8bed\u7684\u8bed\u6cd5\u3002</p>"},{"location":"monkey%E8%A7%A3%E9%87%8A%E5%99%A8/token/#_4","title":"\u8bcd\u6cd5\u89e3\u6790\u5c0f\u6848\u4f8b","text":"<p>\u5bf9\u4e8e\u4e00\u95e8\u50cf\u6837\u7684\u7f16\u7a0b\u8bed\u8a00\u5199\u7684\u4ee3\u7801\uff0c\u4f8b\u5982\u4e0b\u9762\u7684\u8fd9\u4e00\u53e5\uff1a JavaScript<pre><code>// \u6ce8\u610f\u8fd9\u4e0d\u662f\u4efb\u4f55\u4e00\u79cd\u5df2\u7ecf\u5b58\u5728\u7684\u8bed\u8a00\uff0c\n// \u53ea\u662f\u6211\u81ea\u5df1\u89c4\u5b9a\u7684\u5047\u60f3\u8c61\u4e00\u79cd\u8bed\u8a00\u7684\u8bed\u6cd5\uff0c\u5c3d\u7ba1\u4ed6\u770b\u4e0a\u53bb\u6709\u8bb8\u591a\u5176\u4ed6\u8bed\u8a00\u7684\u5f71\u5b50\nlet x = 5 + 5;\n</code></pre> \u8fd9\u95e8\u8bed\u8a00\u7684\u8bcd\u6cd5\u89e3\u6790\u5668\u5e94\u8be5\u80fd\u8fa8\u8ba4\u51fa\uff1a \u6700\u5f00\u59cb\u6709\u4e00\u4e2a\u5173\u952e\u5b57let\uff0c\u7136\u540e\u662f\u4e00\u4e2a\u53d8\u91cf\u7684\u540d\u5b57x\uff0c\u540e\u9762\u662f\u8d4b\u503c\u7b26\u53f7=\uff0c\u52a0\u6cd5\u7b26\u53f7+\uff0c\u8fd8\u6709\u4e24\u4e2a\u6570\u5b575\u3002 \u8bcd\u6cd5\u89e3\u6790\u5668\u5e94\u8be5\u6309\u987a\u5e8f\u7ed9\u6211\u4eec\u8fd9\u6837\u7684\u7ed3\u679c</p> Python<pre><code>[\n    LET, # \u5173\u952e\u5b57\uff0c\u8bed\u8a00\u89c4\u5b9a\u7684\uff0c\u4f8b\u5982if else while struct await func \u7b49\n    IDENTIFIER('x'), # \u6807\u8bc6\u7b26 \u53d8\u91cf\u540dx, abc student_age, \u51fd\u6570\u540d add, push_back\n    EQUAL_SIGN, # \u7b26\u53f7 + - * / % &amp; &gt; &lt; &lt;= || ? \u7b49\n    INTEGER(5), # \u6570\u5b57\u5b57\u9762\u91cf \n    PLUS_SIGN, \n    INTEGER(5)\n]\n</code></pre> <p>\u8fd9\u4e2a\u7ed3\u679c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u6210\u5458\uff0c\u90fd\u662f\u4e00\u4e2a\u8bcd\u6cd5\u5355\u5143token\uff0c\u6bcf\u4e00\u4e2a\u8bcd\u6cd5\u5355\u5143\uff0c\u90fd\u5728\u6e90\u4ee3\u7801\u4e2d\u6709\u5bf9\u5e94\u3002\u6bcf\u4e00\u4e2a\u8bcd\u6cd5\u5355\u5143token\u90fd\u6709\u81ea\u5df1\u7684\u7c7b\u578b\uff0c\u4e3b\u8981\u6709\u8fd9\u51e0\u7c7b - \u5173\u952e\u5b57 \u2014\u2014\u2014 \u7531\u4e00\u95e8\u8bed\u8a00\u81ea\u5df1\u89c4\u5b9a\uff0c\u4e0d\u540c\u7684\u8bed\u8a00\u5173\u952e\u5b57\u8868\u4e0d\u540c\uff0c\u4f8b\u5982<code>c\u8bed\u8a00</code>\u7684<code>include typedef if else while goto</code>  - \u8fd0\u7b97\u7b26 \u52a0<code>+</code>\u51cf<code>-</code>\u4e58<code>*</code>\u9664<code>/</code>\uff0c\u53d6\u6a21<code>%</code>\uff0c\u4e0e<code>&amp;</code>\u6216<code>|</code>\u975e<code>^</code>\u5173\u7cfb\u8fd0\u7b97\uff0c\u5927\u4e8e\u7b49\u4e8e<code>&gt;=</code>, \u6709\u7684\u8bed\u8a00\u8fd8\u6709\u4e09\u5143\u8fd0\u7b97<code>\uff1f</code>\u7b26\u53f7\uff0c\u6307\u9488\u53d6\u503c\u7b26<code>-&gt;</code>\uff0c\u89e3\u5f15\u7528\u7b26<code>*</code>\u7b49 - \u754c\u9650\u7b26 <code>{} () [] &lt;&gt;</code> \u7b49, \u7528\u4e8e\u5728\u8bed\u53e5\u4e2d\u5212\u5206\u51fa\u5c0f\u7684\u4f5c\u7528\u57df\uff0c\u6216\u8005\u6570\u7ec4\u6839\u636e\u4e0b\u6807\u53d6\u503c\u7b49 - \u6807\u8bc6\u7b26 \u53d8\u91cf\u540d<code>x y z abc p_name</code>\uff0c\u51fd\u6570\u540d<code>func add getEventLoop</code>\u7b49 - \u5b57\u9762\u91cf \u5199\u4e00\u4e2a\u6570\u5b57 <code>42, 0, 0xfff, 3.24</code> \u6216\u8005\u4e00\u4e2a\u5b57\u7b26\u4e32 <code>\"man out!\"</code></p> <p>\u8fd9\u4e9b\u7c7b\u578b\u7684token\u518d\u52a0\u4e0a\u4e00\u4e9b\u7a7a\u683c\u6362\u884c\uff0c\u6ce8\u91ca\u7b49\uff0c\u5927\u6982\u5c31\u662f\u4e00\u95e8\u8bed\u8a00\u4e2d\u4f60\u80fd\u5199\u7684\u6240\u6709\u4e1c\u897f\u3002</p>"},{"location":"monkey%E8%A7%A3%E9%87%8A%E5%99%A8/token/#_5","title":"\u8bcd\u6cd5\u5206\u6790\u5668\uff1a\u4e00\u6b65\u6b65\u5b9e\u73b0","text":"<p>\u6734\u7d20\u7684\u60f3\u6cd5\u5c31\u662f\u628a\u6e90\u4ee3\u7801\u5f53\u505a\u5b57\u7b26\u4e32\u53bb\u626b\u63cf\uff0c\u6b63\u5982\u201c\u626b\u63cf\u5668\u201d\u8fd9\u4e2a\u540d\u79f0\u6697\u793a\u7684\u90a3\u6837\u3002 \u8fd9\u91cc\u6211\u6253\u7b97\u7528\u4e00\u4e9b\u5c0f\u5c0f\u7684\u7f16\u7a0b\u7ec3\u4e60\u6765\u5f15\u5165\uff0c\u4e00\u6b65\u4e00\u6b65\u5730\u6dfb\u52a0\u529f\u80fd\uff0c\u76f4\u5230\u5b9e\u73b0\u4e00\u4e2a\u7b80\u964b\u7684\u8bcd\u6cd5\u89e3\u6790\u5668\u3002</p> <ol> <li>\u8bf7\u5199\u4e00\u6bb5\u4ee3\u7801\uff0c\u6bcf\u6b21\u80fd\u591f\u8bfb\u53d6\u5b57\u7b26\u4e32\u4e2d\u7684\u4e00\u4e2a\u5b57\u7b26\u5e76\u6253\u5370\u51fa\u6765     Python<pre><code>for c in range(len(s)):\n    print(c)\n</code></pre></li> <li> <p>\u8bf7\u5199\u4e00\u6bb5\u4ee3\u7801\uff0c\u5982\u679c\u9047\u5230 <code>=+,;(){}</code> \u8fd9\u4e9b\u8fd0\u7b97\u7b26\u548c\u754c\u9650\u7b26\uff0c\u5c31\u5f53\u505atoken\u6309\u987a\u5e8f\u4fdd\u5b58\u8d77\u6765\uff0c\u5176\u4ed6\u7684\u5b57\u7b26\u76f4\u63a5\u4e22\u5f03     Python<pre><code>tokens = []\ns = \"{x =x+1}\"\nfor c in range(len(s)):\n    if c == '=':\n        tokens.append('=')\n    elif c == ';':\n        tokens.append(';')\n    elif c == '{':\n        tokens.append('{')\n    ...  # \u6211\u4eec\u8981\u628a\u6240\u6709\u9700\u8981\u8bc6\u522b\u7684\u5b57\u7b26\u90fd\u5217\u51fa\u6765\uff08\u53ef\u4ee5\u4f7f\u7528switch case\u7b80\u5316\uff09\n    else:\n        print('other, drop.')\nprint(tokens)\n</code></pre>     \u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528\u5b57\u5178\uff0c\u4f46\u65e0\u8bba\u5982\u4f55\u8fd9\u6bb5\u4ee3\u7801\u53ea\u80fd\u8bc6\u522b\u53ef\u7a77\u4e3e\u7684\u754c\u9650\u7b26\u548c\u8fd0\u7b97\u7b26\uff0c\u9488\u5bf9\u5173\u952e\u5b57\u548c\u6807\u8bc6\u7b26\u65e0\u80fd\u4e3a\u529b\u3002</p> </li> <li> <p>\u5b8c\u55842\uff0c\u4f7f\u4e4b\u80fd\u591f\u8bc6\u522b\u5173\u952e\u5b57<code>let</code>,\u548c\u6807\u8bc6\u7b26<code>xyz</code>, <code>add</code>, ...</p> <p>\u5f53\u53d1\u73b0\u662f\u5b57\u6bcd\u5f00\u5934\u65f6\uff0c\u8981\u5f80\u540e\u8bfb\u53d6\u76f4\u5230\u9047\u5230\u975e\u5b57\u6bcd\uff0c\u518d\u5224\u65ad\u8fd9\u4e2a\u8fde\u7eed\u7684\u5b57\u7b26\u5e8f\u5217\u662f\u6807\u8bc6\u7b26\u8fd8\u662f\u5173\u952e\u5b57\u3002</p> </li> <li> <p>\u5b8c\u55843\uff0c\u4f7f\u4e4b\u80fd\u591f\u8bc6\u522b\u6574\u6570\u5b57\u9762\u91cf</p> <p>\u5982\u679c\u5b57\u7b26\u662f\u6570\u5b57\u5b57\u7b26\uff0c\u5c31\u7ee7\u7eed\u8bfb\u53d6\u76f4\u5230\u9047\u5230\u975e\u5b57\u7b26\uff0c\u518d\u628a\u8fd9\u4e2a\u6570\u5b57\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570\u3002</p> </li> </ol>"},{"location":"monkey%E8%A7%A3%E9%87%8A%E5%99%A8/token/#demo","title":"\u8bcd\u6cd5\u5206\u6790\u5668demo","text":"Python<pre><code>class Token:\n    def __init__(self, token_type, token_value=None) -&gt; None:\n        self.token_type = token_type\n        self.token_value = token_value\n\n    def __str__(self) -&gt; str:\n        return f'({self.token_type}\\t{self.token_value})'\n\nEOF = 'EOF'\n\nASSIGN = '='\nPLUS = '+'\nCOMMA = ','\nSEMICOLON = ';'\nLPARENT = '('\nRPARENT = ')'\nLBRACE = '{'\nRBRACE = '}'\n\nLET = 'LET'\nFUNC = 'FUNC'\n\nIDENT = 'IDENT' # \u6807\u8bc6\u7b26 abc, add, foobar, x, y_1\n\nTOKEN_RULE = {\n    # EOF \u548c \u975e\u6cd5\u5b57\u7b26\n    'EOF': EOF,\n    # \u754c\u9650\u7b26\u548c\u8fd0\u7b97\u7b26\n    '+': PLUS,\n    '=': ASSIGN,\n    ',': COMMA,\n    ';': SEMICOLON,\n    '(': LPARENT,\n    ')': RPARENT,\n    '{': LBRACE,\n    '}': RBRACE,\n    # \u5173\u952e\u5b57\n    'let': LET,\n    'func': FUNC\n}\n\n\nclass Lexer:\n    def __init__(self, source_code):\n        self.token_list = []\n        self.source = source_code\n        self.cur_pos = -1\n        self.next_pos = 0\n        self.cur_ch = ''\n\n    def read_char(self):\n        if self.next_pos &gt;= len(self.source):\n            self.cur_ch = 'EOF' # \u6e90\u4ee3\u7801\u5df2\u8bfb\u53d6\u5b8c\u6bd5\n        else:\n            self.cur_ch = self.source[self.next_pos]\n        self.cur_pos = self.next_pos\n        self.next_pos += 1\n        return self.cur_ch\n\n    def look_up_world(self):  # \u67e5\u770b\u4e00\u6574\u4e2a\u8fde\u7eed\u5b57\u7b26\u5e8f\u5217\uff0c\u5224\u65ad\u7c7b\u578b\n        assert self.cur_ch.isalpha()  # \u5f53lexer.ch \u662f\u5b57\u6bcd \u7684\u65f6\u5019\u624d\u4f1a\u4f7f\u7528\u8fd9\u4e2a\u51fd\u6570\n        word_start = self.cur_pos\n        while self.cur_ch.isalpha():  # \u5f80\u540e\u8bfb\uff0c\u76f4\u5230\u9047\u5230\u975e\u5b57\u7b26\n            self.read_char()\n        word = self.source[word_start:self.cur_pos]  # \u6b64\u65f6cur_pos\u5bf9\u5e94\u7684self.ch\u5df2\u7ecf\u662f\u975e\u5b57\u6bcd\uff0c\u662f\u5355\u8bcd\u7684\u4e0b\u4e00\u4f4d\n        # \u8ba9\u5f53\u524d\u8bfb\u53d6\u4f4d\u7f6e \u5f80\u524d\u56de\u4e00\u4f4d\n        self.cur_pos -= 1\n        self.next_pos -= 1\n        self.ch = self.source[self.cur_pos]\n        return word\n\n\n    def next_token(self) -&gt; Token:  # \u76ee\u524d\u53ea\u80fd\u8bc6\u522b\u8fd0\u7b97\u7b26\u53f7+=\u548c \u754c\u9650\u7b26\u53f7,;(){}\n        ch = self.read_char()\n        if ch in [' ', '\\n', '\\t', '\\r']:\n            ch = self.read_char()\n        if ch in TOKEN_RULE:\n            token = Token(TOKEN_RULE[ch])\n            self.token_list.append(token)\n        elif ch.isalpha():\n            word = self.look_up_world()\n            if word in TOKEN_RULE:  # \u662f\u5173\u952e\u5b57\n                token = Token(TOKEN_RULE[word])\n                self.token_list.append(token)\n            else:  # \u662f\u6807\u8bc6\u7b26\n                token = Token(IDENT, word)\n                self.token_list.append(token)\n        else:\n            token = Token('Unknown')\n        return token\n\nsource = \"{(y}let),;x+ afuncbc= func(\"  # \u6ce8\u610f\u7a7a\u683c\u4e5f\u4f1a\u88ab\u8bc6\u522b\u4e3aunknown\nlx = Lexer(source)\nfor _ in range(len(source)):\n    token = lx.next_token()  # \u601d\u8003\u4e3a\u4ec0\u4e48\u8bfb\u53d6 len(source)\u6b21\uff0c\u6700\u540e\u4f1a\u51fa\u73b0\u5f88\u591aEOF\uff1f\uff08\u63d0\u793a\uff1atoken\u7684\u6570\u91cf\u548c\u5b57\u7b26\u7684\u6570\u91cf\u5173\u7cfb\uff09\n    print(token.token_type, token.token_value, sep='\\t\\t')\n\nprint('-'* 20)\n\nnew_lx = Lexer(source)\nwhile new_lx.cur_ch != EOF:\n    token = new_lx.next_token()\n    print(token.token_type, token.token_value, sep='\\t\\t')\n\n\nprint('-'* 20)\nfor t in new_lx.token_list:\n    print(t)\n</code></pre>"},{"location":"python/for_i_in/","title":"\u6539\u8fed\u4ee3\u5668","text":"<p>\u8fd9\u6837\u4fee\u6539\u6570\u7ec4\u7684\u503c\uff0c\u662f\u9519\u8bef\u7684\u65b9\u5f0f Python<pre><code>nums = [2, 4, 5, 7, 9]\nfor i in nums:\n    i = 7\nprint(nums)\n</code></pre> <code>i = 7</code>\u53ea\u662f\u8ba9\u539f\u5148\u6307\u5411\u8fed\u4ee3\u5668\u629b\u51fa\u5bf9\u8c61\u7684\u53d8\u91cfi\uff0c\u8f6c\u800c\u6307\u5411\u53e6\u4e00\u4e2a\u5bf9\u8c617\uff0c\u800c\u539f\u5148\u7684\u8fed\u4ee3\u5668\u7ed9\u51fa\u7684\u5bf9\u8c61\u4e0d\u53d7\u5f71\u54cd</p>"},{"location":"python/i_scope/","title":"scope","text":"<p>python\u7684\u53d8\u91cf\uff0c\u5728\u4f7f\u7528\u524d\u4e0d\u9700\u8981\u5148\u58f0\u660e\uff0c\u5728\u5faa\u73af\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u53d8\u91cfi\u6765\u627f\u63a5\u8fed\u4ee3\u5668\u7ed9\u51fa\u7684\u503c</p> Python<pre><code>i = 9\nfor i in range(5):\n    print('x')\nprint(i) # i = ?\n</code></pre> <p>\u5728golang\u4e2d\u7684\u8868\u73b0 Go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    x := []int{1, 2, 3, 4}\n    for i := range(x) {\n        fmt.Println(\"x\", i)\n    }\n    // fmt.Printf(\"i: %v\\n\", i) // undefined: i\n}\n</code></pre></p> <p>\u8fd9\u6bb5\u4ee3\u7801\u5c55\u793a\u4e86\u4e00\u4e2a\u4e8b\u5b9e\uff1a\u5faa\u73af\u5185\u90e8\u7684i\u548c\u5916\u90e8\u5b9a\u4e49\u7684\u53d8\u91cfi\u662f\u65e0\u5173\u7684\uff0c\u8fd9\u8868\u660ego\u7684\u5faa\u73af\u5185\u90e8\u53d8\u91cf\u662f\u6709\u4f5c\u7528\u57df\u7684 Go<pre><code>package main\n\nimport \"fmt\"\n\nfunc main() {\n    i := 20\n    x := []int{1, 2, 3, 4}\n    for i := range(x) {\n        fmt.Println(\"x\", i)\n    }\n    fmt.Printf(\"i: %v\\n\", i) // i: 20\n}\n</code></pre></p>"},{"location":"python/python/","title":"python\u8bed\u8a00\u7684\u7279\u6027\u5728\u8fd9\u4e00\u4e2anav\u5c55\u793a","text":""},{"location":"python/setattr/","title":"Setattr","text":"<p>\u7ed9C\u6dfb\u52a0\u5c5e\u6027\uff0c\u8868\u73b0\u4e3a\u6df1\u62f7\u8d1d\uff0c\u6dfb\u52a0\u51fd\u6570\u6210\u5458\uff0c\u662f\u5426\u4e5f\u662f\u6df1\u62f7\u8d1d\uff1f Python<pre><code>class C:\n    pass\n\nlst = [1, 2, 4]\n\nsetattr(C, 'lst', lst)\n\nprint(C.lst)\nlst = [1, 5, 7]\n\nprint(C.lst)\n\n\ndef func():\n    return 1\n\nsetattr(C, 'f', func)\n\nprint(C.f())\n\ndef func():\n    return 5\nsetattr(C, 'f', func)\n\nprint(C.f())\n\n# [1, 2, 4]\n# [1, 2, 4]\n# 1\n# 5\n</code></pre></p>"}]}